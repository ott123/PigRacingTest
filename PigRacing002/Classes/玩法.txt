1.“单机模式”。点击后进入一个选择猪的界面，起初只有第一个猪为解锁状态，其余猪需要玩家在玩游戏时最高分达到一定程度才能解锁。
选定后，默认情况会有3个cpu猪与p1一同赛跑。中途遇到的障碍物有：香蕉皮，火圈，石头等
香蕉皮：踩到后滑到，速度降为0。
火圈：每跳过一个可加一定的分数
石头：需要躲避，否则影响小猪前进。

2.小猪跑动。影响因素：弹跳力+速度+敏捷度
跳火圈：弹跳力50+，速度30+，敏捷度50+。
跨栏：弹跳力80+，速度40+，敏捷度40+。
转弯：弹跳力10+，速度20-，敏捷度60+

左手【左边3个按钮】：切换加工机
右手【右边1个按钮】：运转发电机
中间1个按钮：启动/急停
右上方的1个按钮：开始/暂停
左上方：显示时间，分数等
左侧：进度条


【速度达到超快时，小猪会说：“哈哈，主人你好给力噢！”】



3.小猪选择最佳路线的能力。由iQ决定

4.去掉“敏捷度”

5.SpritePig::findWay()函数的实现使用不同的算法，每一种算法针对一个范围的IQ

6.规定精灵移动的最小距离【也可以说是地图最小移动距离。设想一下，如果是方块地图，用A星算法计算，地图的移动距离有3种情况：0，最小距离，最小距离*1.414】。
	精灵移动这么长的距离有两种方式：a.最小距离==精灵动作的一个帧	b.最小距离==精灵动作的一组帧
	无论何种类型的猪，属性值差异性如何，它们任意一段时间里移动的距离都是某个最小距离的整数倍。
	这个最小距离，可以设计为砖块地图的一个块的大小，也可以设置为一个固定值，比如砖块的一半，或10px等

7.A星算法寻找最短路径
	a.A星算法并不能保证每一次都找到最短路径，尤其是地图上存在障碍物时
	b.搜索的效率与搜索方块的顺序有关
	c.“赛猪”由于大多数情况精灵都是向上走，所以在遇到F值相等的情况下时，应该保证优先将靠上的方块添加到close表中





玩法概述：
1.精灵自动判断路径并向前跑，精灵有个iq属性，iq值决定精灵选择最佳路径，预知障碍物的距离，及穿越障碍物时的敏捷度
2.点击右边的那个键，精灵的speed【速度】和spring【弹跳力】值会增加，点击越快增长越快。【加speed还是加spring通过左手点击切换】
3.精灵的speed和spring会随时间逐渐减小，直至一个xml里面配置的最小值为止，然后在没有点击右键的情况下，精灵保持这个最小速度持续向前跑
